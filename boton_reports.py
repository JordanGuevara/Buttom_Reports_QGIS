import os
from qgis.PyQt.QtWidgets import QAction, QMessageBox
from qgis.PyQt.QtGui import QIcon
from qgis.utils import iface

# Variable global para el bot√≥n
accion = None

# Usuario actual
usuario = os.getlogin()

# Rutas
ruta_icono = fr"C:\Users\{usuario}\Documents\Archivo_Python\icono_reporte.png"
ruta_script = fr"C:\Users\{usuario}\Documents\Archivo_Python\reports.py"  # Aqu√≠ se eval√∫a correctamente el usuario

# Funci√≥n para ejecutar el script del reporte
def ejecutar_reporte():
    try:
        # Aseg√∫rate de usar la ruta con el usuario correctamente evaluado
        exec(open(ruta_script).read())
        QMessageBox.information(None, "√âxito", "‚úÖ El reporte se gener√≥ correctamente.")
    except Exception as e:
        QMessageBox.critical(None, "Error", f"‚ùå Error al generar el reporte: {str(e)}")

# Agregar bot√≥n con √≠cono predeterminado
def agregar_boton():
    global accion
    # Si ya existe un bot√≥n, lo eliminamos antes de agregar el nuevo
    if accion:
        iface.removeToolBarIcon(accion)
        print("üßπ Bot√≥n anterior eliminado.")
    
    # Usar un √≠cono predeterminado
    icono = QIcon.fromTheme("dialog-information")  # √çcono est√°ndar
    accion = QAction(icono, "Reporte", iface.mainWindow())  # T√≠tulo para el bot√≥n
    accion.triggered.connect(ejecutar_reporte)
    iface.addToolBarIcon(accion)
    print("‚ûï Nuevo bot√≥n agregado.")

# Eliminar bot√≥n
def eliminar_boton():
    global accion
    if accion:
        iface.removeToolBarIcon(accion)
        print("üßπ Bot√≥n eliminado.")
        accion = None  # Resetear la variable
    else:
        print("‚ùó Bot√≥n no encontrado.")
